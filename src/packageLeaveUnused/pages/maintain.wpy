<style lang="less">
@import './../static/base.less';
</style>

<template>
  <div class="page-container">
    <!-- 品牌 -->
    <div class="group right-down">
      <div class="brand ">
        <picker bindchange="changeCheckedBrand" range-key="brandSourceName" value="{{index}}" range="{{brands}}">
          <view class="input-group ">
            <div class="title">品　　牌</div>
            <input class="input" value="{{brands[index].brandSourceName}}" disabled="{{true}}" placeholder="请选择品牌" />
          </view>
        </picker>
      </div>
    </div>
    <!-- 修护服务 -->
    <!-- <div class="group right-go" @tap="on_toSelectServe">
      <div class="brand ">
        <view class="input-group ">
          <div class="title">修护服务</div>
          <input class="input" value="{{maintain}}" disabled="{{true}}" placeholder="请选择服务" />
        </view>
      </div>
    </div> -->
    <!-- 图片 -->
    <div class="group ">
      <div class="images">
        <div class="input-group">
          <div class="title">添加奢护产品照片</div>
          <div class="title-ext">（最多上传6张）</div>
        </div>
        <div class="images-group">
          <van-uploader multiple="{{ true }}" accept="image" max-count="6" file-list="{{ images }}" @delete="imgDelete" @after-read="imgRead" />
        </div>
      </div>
    </div>
    <!-- 物主姓名 -->
    <div class="group ">
      <div class="price">
        <view class="input-group ">
          <div class="title">物主姓名</div>
          <input class="input" v-model="userName" placeholder="请输入您的姓名" />
        </view>
      </div>
    </div>
    <!-- 联系方式 -->
    <div class="group ">
      <div class="contact">
        <view class="input-group ">
          <div class="title">联系方式</div>
          <input class="input" v-model="contact" placeholder="请输入微信号/手机号" />
        </view>
      </div>
    </div>
    <!-- 描述 -->
    <div class="group ">
      <div class="describe">
        <textarea maxlength="9999" v-model="remark" auto-height placeholder="填写需要备注的信息" />
        </div>
      </div>
    <!-- 协议 -->
    <div class="checkbox-group" @tap="onChange">
      <van-checkbox icon-size="30rpx" checked-color="#C9AB79" value="{{ checkedProtocol }}"></van-checkbox>
      <div class="t1">我已阅读并同意租英台</div>
      <div class="t2"  @tap.stop="on_toProtocol">《养护协议》</div>
    </div>
    <!-- btn -->
    <div class="btn" @tap="submit">提交</div>

    <div class="footer">
      <div>微信号：iyavic</div>
      <div class="copy" @tap="on_copy">复制</div>
    </div>
  </div>

  <!-- 弹框 -->
  <tooltip @affirm="on_affirm" show="{{ tooltipShow }}" title="{{ '提交成功' }}" p1="您的资料已提交成功，我们会尽快联系您" p2="注意留意电话或微信 !!!"></tooltip>
</template>
<script>
import wepy from '@wepy/core'
import uploadImage from './../../mixins/uploadImage.js'
import { vailPhone } from './../../utils/util.js'
import { listBrand, formNurse } from './../../http/api.js'
wepy.page({
  config: {
    navigationBarTitleText: '闲置'
  },
  mixins: [uploadImage],
  data: {
    index: 0, // 选中的品牌下标
    brands: [], // 品牌
    maintain: '', // 修护服务
    userName: '', // 物主姓名
    contact: '', // 联系方式
    remark: '', // 备注
    checkedProtocol: false,  // 协议
    tooltipShow: false
  },
  methods: {
        // 跳转协议
    on_toProtocol () {
      wx.navigateTo({ url: '/packageElse/pages/protocolSpecification?pageCode=jifen_guizhe' })
    },
    // 去选择服务
    on_toSelectServe () {
      let _this = this
      wx.navigateTo({
        url: '/packageLeaveUnused/pages/selectServe',
        events: {
          getMaintain: function (data) {
            _this.maintain = data
            console.log(data)
          }
        }
      })
    },
    // 复制
    on_copy () {
      wx.setClipboardData({
        data: 'iyavic',
        success (res) {
          wx.showToast({
            title: '微信号已复制',
            icon: 'none',
            duration: 2000
          })
        }
      })
    },
    // 品牌
    changeCheckedBrand: function (e) {
      this.index = e.$wx.detail.value
    },
    // 协议
    onChange () {
      this.checkedProtocol = !this.checkedProtocol
    },
    // 获取品牌数据
    getBrandData () {
      listBrand().then(res => {
        if (res.code === 0) {
          this.brands = res.data.listRows
        }
      })
    },
    submit () {
      let _this = this
      if (!_this.checkedProtocol) {
        wx.showModal({
          title: '提示',
          content: '请阅读并同意养护协议',
          success (res) {
            if (res.confirm) {
              console.log('用户点击确定')
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
      } else {
        let parameter = {
          brand: _this.brands[_this.index].brandChineseName,
          name: _this.userName,
          phone: _this.contact,
          remark: _this.remark
          // userItemId: _this.userItemId
        }
        let imgStr = ''
        _this.images.forEach((item, index) => {
          if (index > 0) {
            imgStr += ','
          }
          imgStr += item.path
        })
        parameter.images = imgStr

        for (const key in parameter) {
          if (!parameter[key] && key !== 'remark') {
            wx.showToast({
              title: '请完善信息之后在提交哦',
              icon: 'none',
              duration: 2000
            })
            return
          }
        }
        if (!vailPhone(parameter.phone)) {
          wx.showToast({
            title: '请输入正确的手机号',
            icon: 'none',
            duration: 2000
          })
          return
        }
        formNurse(parameter).then((res) => {
          if (res.code === 0) {
            // 显示弹框
            _this.tooltipShow = true
          }
        })
      }
    },
    on_affirm () {
      wx.navigateBack({
        delta: 1
      })
    }
  },
  created () {
    this.getBrandData()
  },
  // 监听页面加载
  onLoad () { },
  // 生命周期回调—监听页面显示
  onShow () { },
  // 生命周期回调—监听页面初次渲染完成
  onReady () { },
  // 生命周期回调—监听页面隐藏
  onHide () { },
  // 生命周期回调—监听页面卸载
  onUnload () { },
  // 监听用户下拉动作
  onPullDownRefresh () { },
  // 页面上拉触底事件的处理函数
  onReachBottom () { },
  // 用户点击右上角转发
  onShareAppMessage () { },
  // 页面滚动触发事件的处理函数
  onPageScroll () { },
  // 页面尺寸改变时触发，详见 响应显示区域变化
  onResize () { },
  // 当前是 tab 页时，点击 tab 时触发
  onTabItemTap () { }
})
</script>
<config>
{
    navigationBarTitleText: '养护',
    usingComponents: {
       "van-checkbox": "~@vant/checkbox/index",
        "van-uploader": "~@vant/uploader/index",
        "tooltip": "~@components/tooltip",
    },
}
</config>
