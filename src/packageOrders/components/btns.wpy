<style lang="less">
// 按钮
.btn-box {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  .yajing {
    font-size: 30rpx;
    text-align: left;
    flex: 1;
  }
  .btn {
    // margin: 30rpx 0rpx;
    width: 180rpx;
    height: 68rpx;
    border-radius: 12rpx;
    line-height: 68rpx;
    text-align: center;
    font-size: 30rpx;
    margin-left: 10rpx;
  }
  .btn1 {
    color: #fff;
    background: #30313b;
  }
  .btn2 {
    color: #30313b;
    background-color: #fff;
    border: 1px solid #30313b;
  }
}

.slot-title {
  color: rgba(49, 49, 59, 1);
  font-weight: 400;
  .t1 {
    font-size: 48rpx;
  }
  .t2 {
    font-size: 24rpx;
  }
}
.slot-conotent {
  padding-bottom: 80rpx;
  .row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 30rpx 0;
    .left {
      display: flex;
      font-size: 28rpx;
      color: rgba(49, 49, 59, 1);
      .icon-img {
        width: 38rpx;
        height: 38rpx;
        display: block;
        margin-right: 18rpx;
      }
    }
  }
  .btn {
    margin-top: 40rpx;
    width: 100%;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    background: rgba(49, 49, 59, 1);
    font-size: 30rpx;
    color: rgba(255, 255, 255, 1);
  }
}
// 屏风弹框
.screen-dialog {
  padding-bottom: 40rpx;
  box-sizing: border-box;
  .row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 50rpx;
    font-size: 28rpx;
    line-height: 1;
    color: rgba(49, 49, 59, 1);
    .left {
    }
    .right {
    }
  }
  .btn {
    width: 100%;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    background: rgba(49, 49, 59, 1);
    font-size: 30rpx;
    color: #fff;
  }
  .express-input {
    width: 100%;
  }
}
</style>

<template>
  <!-- 按钮 btns -->
  <div class="btn-box">
    <div class="yajing" v-if="CHECKING">退还押金 {{ '2600' }}</div>
    <div class="btn btn2" @tap="on_del" v-if="CLOSED">删除订单</div>
    <div class="btn btn2" @tap="on_service" v-if="UNPAID||CLOSED">联系客服</div>
    <div class="btn btn2" @tap="on_bask" v-if="COMPLETE||USING||CHECKING">晒单</div>
    <!-- <div class="btn btn2" @tap="on_renewal" v-if="USING">续 租</div> -->
    <div class="btn btn1" @tap="on_appointReturn" v-if="USING">归还</div>
    <div class="btn btn1" @tap="on_logistics" v-if="SENDING||RETURNING">查看物流</div>
    <div class="btn btn1" @tap="on_confirmReceipt" v-if="SENDING">确认收货</div>
    <div class="btn btn1" @tap="on_placeOrder" v-if="CLOSED||COMPLETE||CHECKING">再次下单</div>
    <div class="btn btn1" @tap="on_pay" v-if="UNPAID">去支付</div>
  </div>

  <!-- 支付弹框 -->
  <half-screen-dialog @close="on_showZifu" show="{{ isShowZifu }}">
    <div class="slot-title" slot="title">
      <div class="t1"> ¥2632.00 </div>
      <div class="t2"> 应付金额 </div>
    </div>
    <div class="slot-conotent" slot="desc">
      <!-- <div class="row" @tap="on_changePaymentMethod('ZYT')">
        <div class="left">
          <image class="icon-img" src="https://rent-luxury.oss-cn-shanghai.aliyuncs.com/miniapp/dev/images/qian-icon.png" mode="widthFix"></image>
          <div class="text">租英台账户（余额：¥0）</div>
        </div>
        <div class="right">
          <van-checkbox icon-size="40rpx" checked-color="#C9AB79" value="{{ paymentMethod === 'ZYT' }}"></van-checkbox>
        </div>
      </div> -->
      <div class="row" @tap="on_changePaymentMethod('WX')">
        <div class="left">
          <image class="icon-img" src="https://rent-luxury.oss-cn-shanghai.aliyuncs.com/miniapp/dev/images/wx.png" mode="widthFix"></image>
          <div class="text">微信</div>
        </div>
        <div class="right">
          <van-checkbox icon-size="40rpx" checked-color="#C9AB79" value="{{ paymentMethod === 'WX' }}"></van-checkbox>
        </div>
      </div>
      <div class="btn" @tap="on_zifu">确认支付</div>
    </div>
  </half-screen-dialog>

  <!-- 屏风弹框-续租 -->
  <half-screen-dialog @close="on_showXuZhuDialog" show="{{showXuZhuDialog}}">
    <div slot="desc" class="screen-dialog">
      <div class="row">
        <div class="left">租用天数</div>
        <div class="right">
          <stepper value="{{ day }}" integer @change="on_ChangeDay" min="7" max="30" step="7"></stepper>
        </div>
      </div>
      <div class="row">
        <div class="left">租金</div>
        <div class="right">10元/天</div>
      </div>
      <div class="btn" @tap="on_xuZhu">确认下单</div>
    </div>
  </half-screen-dialog>
  <!-- 屏风弹框-物流 -->
  <half-screen-dialog @close="on_showWuLiuDialog" show="{{showWuLiuDialog}}">
    <div slot="desc" class="screen-dialog">
      <div class="row">
        <div class="left">物流公司</div>
        <div class="right">顺丰</div>
      </div>
      <div class="row">
        <input class="express-input" adjust-position="{{true}}" cursor-spacing="15" v-model="expressNo" placeholder="请输入物流单号" />
      </div>
      <div class="btn" @tap="on_submitWuLiu">提交</div>
    </div>
  </half-screen-dialog>
  <!-- 弹框 -->
  <tooltip @affirm="on_affirm" show="{{ tooltipShow }}" title="{{ '支付成功' }}" p1="您的包包正在打包中，可在我的订单中" p2="查看订单状态"></tooltip>

</template>

<script>
import wepy from '@wepy/core'
import { deleteOrder, received, sendBack, payOrder } from './../../http/api.js'
wepy.component({
  computed: {
    UNPAID () { // 等待付款
      return this.orderData.orderStatus === 0
    },
    PAID () { // 已支付
      return this.orderData.orderStatus === 1
    },
    SENDING () { // 运输中,待收货
      return this.orderData.orderStatus === 2
    },
    USING () { // 使用中,待归还
      return this.orderData.orderStatus === 3
    },
    RETURNING () { // 归还中
      return this.orderData.orderStatus === 4
    },
    CHECKING () { // 验收中
      return this.orderData.orderStatus === 5
    },
    CLOSED () { // 交易关闭
      return this.orderData.orderStatus === 8
    },
    COMPLETE () { // 交易完成
      return this.orderData.orderStatus === 9
    }
  },
  props: {
    orderData: {
      type: Object,
      default: {}
    }
  },
  data: {
    day: '', // 续租天数
    showXuZhuDialog: false, // 显示续租对话框
    showWuLiuDialog: false, // 显示物流对话框
    expressNo: '', // 归还的快递单号
    tooltipShow: false, // 支付成功弹框
    // 用户地址
    isShowZifu: false, // 确认支付
    paymentMethod: 'ZYT'  // ZYT / WX
  },
  methods: {
    // 删除订单
    on_del () {
      let _this = this
      let orderId = this.orderData.orderId
      deleteOrder({ orderId }).then(res => {
        if (res.code === 0) {
          console.log(res)
          _this.$emit('refresh')
        }
      })
    },
    // 联系客服
    on_service () {
      wx.setClipboardData({
        data: '客服微信',
        success (res) {
          wx.showToast({
            title: '客服微信已复制',
            icon: 'none',
            duration: 2000
          })
        }
      })
    },
    // 晒单
    on_bask () { },
    // 续 租
    on_renewal () {
      this.on_showXuZhuDialog()
    },
    // 预约归还
    on_appointReturn () {
      // 显示物流对话框
      this.on_showWuLiuDialog()
    },
    // 查看物流
    on_logistics () {
      let _this = this
      wx.navigateTo({
        url: '/packageOrders/pages/expressDetails',
        success: function (res) {
          // 通过eventChannel向被打开页面传送数据
          // sendAddrPhone  发的人手机
          // sendExpressNo  发的单号
          // backAddrPhone  收的人手机
          // backExpressNo  收的单号
          let obj
          if (_this.SENDING) {
            obj = {
              expressNo: _this.orderData.sendExpressNo,
              AddrPhone: _this.orderData.sendAddrPhone
            }
          } else if (_this.RETURNING) {
            obj = {
              expressNo: _this.orderData.backExpressNo,
              AddrPhone: _this.orderData.backAddrPhone
            }
          }
          res.eventChannel.emit('getPageData', obj)
        }
      })
    },
    // 确认收货
    on_confirmReceipt () {
      let _this = this
      let orderId = this.orderData.orderId
      wx.showModal({
        title: '提示',
        content: '确认收货',
        success (res) {
          if (res.confirm) {
            console.log('用户点击确定')
            received({ orderId }).then(res => {
              if (res.code === 0) {
                console.log(res)
                _this.$emit('refresh')
              }
            })
          } else if (res.cancel) {
            console.log('用户点击取消')
          }
        }
      })
    },
    // 再次下单
    on_placeOrder () {
      let goodsId = this.orderData.goodsId
      wx.navigateTo({
        url: '/packageCommodity/pages/details',
        success: function (res) {
          res.eventChannel.emit('getGoodsId', { goodsId })
        }
      })
    },
    // 去支付 显示支付框
    on_pay () {
      this.isShowZifu = !this.isShowZifu
    },
    // -----------------------------------------------
    // 物流对话框
    on_showWuLiuDialog () {
      this.showWuLiuDialog = !this.showWuLiuDialog
    },
    // 提交物流信息
    on_submitWuLiu () {
      let _this = this
      let parameter = {
        expressNo: _this.expressNo, // 快递单号
        orderId: _this.orderData.orderId // 订单标识
      }
      sendBack(parameter).then(res => {
        if (res.code === 0) {
          _this.$emit('refresh')
        }
      })
    },
    // 续租对话框
    on_showXuZhuDialog () {
      this.showXuZhuDialog = !this.showXuZhuDialog
    },
    // 改变续租天数
    on_ChangeDay (e) {
      console.log(e.$wx.detail)
      this.day = e.$wx.detail
    },
    // 确认续租
    on_xuZhu () {
      this.on_showXuZhuDialog()
      // 去支付
      this.on_pay()
    },
    // 支付完成
    on_affirm () {
      this.$emit('refresh')
      // wx.navigateBack({
      //   delta: 1
      // })
    },
    // 支付接口
    on_zifu () {
      let _this = this
      let parameter = {
        orderId: _this.orderData.orderId
      }
      payOrder(parameter).then(res => {
        if (res.code === 0) {
          _this.isShowZifu = false
          _this.WXzifu(res.data)
        }
      })
    },
    // 微信支付
    WXzifu (data) {
      let _this = this
      wx.requestPayment({
        timeStamp: data.tradeInfo.timeStamp,
        nonceStr: data.tradeInfo.nonceStr,
        package: data.tradeInfo.package,
        signType: data.tradeInfo.signType,
        paySign: data.tradeInfo.paySign,
        success (res) {
          _this.tooltipShow = true
          console.log(res)
        },
        fail (res) { }
      })
    },
    // 更改支付方式
    on_changePaymentMethod (paymentMethod) {
      this.paymentMethod = paymentMethod
    }
  },
  attached () {
  }
})
</script>
<config>
{
    usingComponents: {
      "half-screen-dialog": "~@weui/half-screen-dialog/half-screen-dialog",
      "tooltip": "~@components/tooltip",
      "stepper": "~@vant/stepper",
      "van-checkbox": "~@vant/checkbox",
    }
}
</config>
