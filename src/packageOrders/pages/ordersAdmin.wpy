<style lang="less">
page {
  background-color: #f6f6f6;
}
.page-container {
  .tabs {
    width: 100%;
    background-color: #fff;
    display: flex;
    .tab {
      flex: 1;
      padding: 30rpx 16rpx;
      text-align: center;
      font-size: 30rpx;
      color: #a1a1a1;
    }
    .tab.active {
      color: #000;
    }
  }
  .list {
    .item-box {
      margin-top: 20rpx;
      background-color: #fff;
    }
  }
}
</style>
<template>
  <div class="page-container">
    <div class="tabs">
      <div @tap="on_changeTab(item)" class="tab" :class="{'active': tabActive === item.code}" v-for="(item,index) in tabList" :key="index"> {{ item.text }} </div>
    </div>
    <div class="list">
      <div class="item-box" v-for="(item,index) in ordersList" :key="index">
        <commodity-item-box @refresh="on_refresh" item="{{ item }}"></commodity-item-box>
      </div>
    </div>
  </div>
</template>
<script>
import wepy from '@wepy/core'
import pageTurning from './../../mixins/pageTurning.js'
import { listOrder } from './../../http/api.js'
wepy.page({
  computed: {
  },
  mixins: [pageTurning],
  data: {
    tabActive: '',
    tabList: [
      {
        text: '待付款',
        code: 'unpaid'
      },
      {
        text: '待收货',
        code: 'sending'
      },
      {
        text: '待归还',
        code: 'using'
      },
      {
        text: '归还中',
        code: 'returning'
      },
      {
        text: '结单',
        code: 'checking'
      },
      {
        text: '全部',
        code: ''
      }
    ],
    ordersList: [] // 订单列表
  },
  methods: {
    // tab改变了
    on_changeTab (item) {
      console.log(item)
      this.tabActive = item.code
      this.initPageNum()
      this.getPageListData()
    },
    // 刷新数据
    on_refresh () {
      this.getPageListData()
    },
    // 获取页面传入数据
    getData () {
      let _this = this
      const eventChannel = this.$wx.getOpenerEventChannel()
      eventChannel.on('getPageData', function (data) {
        _this.tabActive = data
        _this.getPageListData()
      })
    },
    // 获取订单列表
    getPageListData () {
      let _this = this

      let parameter = {
        orderFilter: _this.tabActive,
        pageNum: _this.pageNum,
        pageSize: _this.pageSize
      }
      listOrder(parameter).then(res => {
        if (res.code === 0) {
          // 设置信息数组
          if (this.pageNum > 1) {
            _this.ordersList = [..._this.ordersList, ...res.data.pageRows]
          } else {
            _this.ordersList = res.data.pageRows
          }
          this.pageSize = res.data.pageRows.length
        }
      })
    }
  },
  // 监听页面加载
  onLoad () {
    this.getData()
  },
  // 生命周期回调—监听页面显示
  onShow () {
  },
  // 生命周期回调—监听页面初次渲染完成
  onReady () { },
  // 生命周期回调—监听页面隐藏
  onHide () { }
})
</script>
<config>
{
    navigationBarTitleText: "我的订单",
    usingComponents: {
        "commodity-item-box": "./../components/commodityItem-box",
    }
}
</config>
