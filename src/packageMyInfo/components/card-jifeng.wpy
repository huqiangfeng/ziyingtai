<style lang="less">
.card {
  background: rgba(48, 49, 59, 1);
  padding: 40rpx;
  line-height: 1;
  .row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 26rpx;
    color: rgba(255, 255, 255, 1);
    .guizhe {
      display: flex;
      .img {
        width: 28rpx;
        height: 28rpx;
        display: block;
        margin-right: 10rpx;
      }
    }
  }
  .value-jifen {
    margin: 40rpx 0 60rpx;
    font-size: 98rpx;
    font-weight: 500;
    color: rgba(255, 255, 255, 1);
  }
  .btn {
    width: 670rpx;
    height: 80rpx;
    line-height: 80rpx;
    text-align: center;
    background: rgba(201, 171, 121, 1);
    border-radius: 12rpx;
    font-size: 36rpx;
    color: rgba(255, 255, 255, 1);
  }
  .btn.active {
    background: #a1a1a1;
  }
}
</style>

<template>
  <div class="card">
    <div class="row">
      <div class="crrent-jifen">当前积分</div>
      <div class="guizhe" @tap="on_toProtocol">
        <image class="img" src="https://app.static.luyishepin.vip/miniapp/dev/images/wenhao.png" mode="widthFix"></image>
        <div>积分规则</div>
      </div>
    </div>
    <div class="value-jifen">{{ userInfo.userPoints }}</div>
    <div class="btn" :class="{'active':active}" @click="on_sign">签 到</div>
  </div>
</template>

<script>
import wepy from '@wepy/core'
import store from './../../store'
import { mapState } from '@wepy/x'
import { sign, checkSign, getUserInfo } from './../../http/api.js'
wepy.component({
  props: {
  },
  store,
  computed: {
    ...mapState(['userInfo'])
  },
  data: {
    active: false
  },
  methods: {
    // 跳转协议
    on_toProtocol () {
      wx.navigateTo({ url: '/packageElse/pages/protocolSpecification?pageCode=points_rule' })
    },
    // 签到
    on_sign () {
      if (this.active) { return }
      sign().then(res => {
        if (res.code === 0) {
          this.checkSign()
          getUserInfo()
          this.$emit('refresh')
          wx.showToast({
            title: '签到成功',
            icon: 'none',
            duration: 2000
          })
        }
      })
      // this.$emit('')
    },
    // 检查签到
    checkSign () {
      let _this = this
      checkSign().then(res => {
        if (res.code === 0) {
          if (res.data.todaySign === 1) {
            _this.active = true
          }
        }
      })
    }
  },
  // 在组件实例刚刚被创建时执行
  created () {
  },
  // 在组件实例进入页面节点树时执行
  attached () {
    // 获取页面数据
    this.checkSign()
  },
  // 组件生命周期函数-在组件布局完成后执行
  ready () {
  }
})
</script>
<config>
{
    usingComponents: {
    }
}
</config>
